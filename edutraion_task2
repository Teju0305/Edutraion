# ðŸŽ¬ Movie Rating Prediction using cleaned IMDb India dataset

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import mean_squared_error, r2_score

# Upload the dataset
from google.colab import files
uploaded = files.upload()  # Upload your dataset file here

# Load with proper encoding
df = pd.read_csv('/content/IMDb Movies India (1).csv', encoding='latin1')

# Print column names for verification
print("âœ… Columns:", df.columns.tolist())

# Drop rows with missing target
df = df.dropna(subset=['Rating'])

# Fill missing values in important categorical features
for col in ['Genre', 'Director', 'Actor 1', 'Actor 2', 'Actor 3']:
    df[col] = df[col].fillna(df[col].mode()[0])

# Label Encode all categorical columns
label_cols = ['Genre', 'Director', 'Actor 1', 'Actor 2', 'Actor 3']
le = LabelEncoder()
for col in label_cols:
    df[col] = le.fit_transform(df[col])

# Features and target
X = df[['Genre', 'Director', 'Actor 1', 'Actor 2', 'Actor 3']]
y = df['Rating']

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict and evaluate
y_pred = model.predict(X_test)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = r2_score(y_test, y_pred)

print(f"âœ… RMSE: {rmse:.2f}")
print(f"âœ… RÂ² Score: {r2:.2f}")
